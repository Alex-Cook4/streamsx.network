/*
** Copyright (C) 2011, 2015  International Business Machines Corporation
** All Rights Reserved
*/

namespace sample;

use com.ibm.streamsx.network.source::*;

composite TestPacketLiveSourceTimestamp {
	
	type 
	
	PacketType =
		int32 int32Timestamp,
		uint32 uint32Timestamp,
		float32 float32Timestamp,
		float64 float64Timestamp,
		timestamp timestampTimestamp,
		blob rawPacket ;		// contents of packet, including network headers (not necessarily complete)
	
	graph
	
	stream<PacketType> PacketStream as Out = PacketLiveSource() {
		param
		  networkInterface: "eth0";
		  promiscuous: true;
		  bufferSize: 1000000000u;
		  machineID: 12345678;
		  processorAffinity: 1u;	
		output Out:
			int32Timestamp = timestampp(),
			uint32Timestamp = timestampp(),
			float32Timestamp = timestampp(),
			float64Timestamp = timestampp(),
			timestampTimestamp = timestampp(),
			rawPacket = packet(); }
	() as PacketSink = FileSink(PacketStream) { param file: "debug.TestPacketLiveSourceTimestamp.PacketStream.out" ; format: txt ; hasDelayField: true ; }	

}

